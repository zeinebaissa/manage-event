{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ReadEventComponent = class ReadEventComponent {\n  constructor(service) {\n    this.service = service;\n  }\n  ngOnInit() {\n    this.getAllData();\n  }\n  //getdeleteID\n  deleteId(id_event) {\n    console.log(id_event, \"deleteId==>\");\n    this.service.deleteData(id_event).subscribe(res => {\n      console.log(res, 'deleteres==>');\n      this.successmsg = res.message;\n      this.getAllData();\n    });\n  }\n  //get all data\n  getAllData() {\n    this.service.getAllData().subscribe(res => {\n      console.log(res, \"res==>\");\n      this.readData = res.data;\n    });\n  }\n};\nReadEventComponent = __decorate([Component({\n  selector: 'app-read-event',\n  templateUrl: './read-event.component.html',\n  styleUrls: ['./read-event.component.css']\n})], ReadEventComponent);","map":{"version":3,"names":["Component","ReadEventComponent","constructor","service","ngOnInit","getAllData","deleteId","id_event","console","log","deleteData","subscribe","res","successmsg","message","readData","data","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\zeine\\Desktop\\projet angular\\frontend\\src\\app\\read-event\\read-event.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport {ApiseriviceEventService} from '../apiserivice-event.service'\n@Component({\n  selector: 'app-read-event',\n  templateUrl: './read-event.component.html',\n  styleUrls: ['./read-event.component.css']\n})\nexport class ReadEventComponent implements OnInit {\n\n  constructor(private service:ApiseriviceEventService){}\n\n  readData:any;\n  successmsg:any;\n\n\n  ngOnInit():void{\n    this.getAllData();\n  }\n\n\n  //getdeleteID\n  deleteId(id_event:any){\n    console.log(id_event,\"deleteId==>\");\n    this.service.deleteData(id_event).subscribe((res)=>{\n      console.log(res,'deleteres==>');\n      this.successmsg=res.message;\n      this.getAllData();\n    })\n  }\n\n  //get all data\n  getAllData(){\n    this.service.getAllData().subscribe((res)=>{\n      console.log(res,\"res==>\");\n      this.readData=res.data;\n\n    })\n  }\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAOzC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAE7BC,YAAoBC,OAA+B;IAA/B,KAAAA,OAAO,GAAPA,OAAO;EAA0B;EAMrDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAGA;EACAC,QAAQA,CAACC,QAAY;IACnBC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,aAAa,CAAC;IACnC,IAAI,CAACJ,OAAO,CAACO,UAAU,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAEC,GAAG,IAAG;MACjDJ,OAAO,CAACC,GAAG,CAACG,GAAG,EAAC,cAAc,CAAC;MAC/B,IAAI,CAACC,UAAU,GAACD,GAAG,CAACE,OAAO;MAC3B,IAAI,CAACT,UAAU,EAAE;IACnB,CAAC,CAAC;EACJ;EAEA;EACAA,UAAUA,CAAA;IACR,IAAI,CAACF,OAAO,CAACE,UAAU,EAAE,CAACM,SAAS,CAAEC,GAAG,IAAG;MACzCJ,OAAO,CAACC,GAAG,CAACG,GAAG,EAAC,QAAQ,CAAC;MACzB,IAAI,CAACG,QAAQ,GAACH,GAAG,CAACI,IAAI;IAExB,CAAC,CAAC;EACJ;CAED;AAhCYf,kBAAkB,GAAAgB,UAAA,EAL9BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWnB,kBAAkB,CAgC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}