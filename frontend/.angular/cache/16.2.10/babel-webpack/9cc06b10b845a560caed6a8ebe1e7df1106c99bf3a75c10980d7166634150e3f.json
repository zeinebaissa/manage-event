{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const usernameControl = this.loginForm.get('username');\n    const passwordControl = this.loginForm.get('password');\n    // Vérifier si les contrôles du formulaire sont définis\n    if (usernameControl && passwordControl) {\n      const username = usernameControl.value;\n      const password = passwordControl.value;\n      // Check if the username and password are correct\n      if (username === 'admin' && password === '123456') {\n        // Redirect to the home page (adjust the route as needed)\n        console.log('ok');\n        this.router.navigate(['/homepage']);\n      } else {\n        // Display an error message (you can customize this)\n        alert('Invalid username or password');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 1,\n    consts: [[\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"login-container\", \"container\", \"pt-3\"], [1, \"row\"], [1, \"col-md-4\", \"col-sm-8\", \"m-auto\"], [1, \"card\", \"border-0\", \"shadow\"], [1, \"card-body\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"60\", \"height\", \"60\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", 1, \"mx-auto\"], [\"d\", \"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0\"], [\"fill-rule\", \"evenodd\", \"d\", \"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"placeholder\", \"username\", \"required\", \"\", 1, \"form-control\", \"my-3\", \"py-2\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password\", \"required\", \"\", 1, \"form-control\", \"my-3\", \"py-2\"], [1, \"text-center\", \"mt-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 0)(3, \"meta\", 1);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Homepage\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\", 2)(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"div\", 6);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(12, \"svg\", 7);\n        i0.ɵɵelement(13, \"path\", 8)(14, \"path\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(15, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(16, \"input\", 11)(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"button\", 14);\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"svg.mx-auto[_ngcontent-%COMP%] {\\n    margin: auto 42% !important;\\n}\\n.container[_ngcontent-%COMP%]{\\n    width: 100%;\\nheight: 100vh;\\n    }\\nbody[_ngcontent-%COMP%]{\\n    background-image: url('bg-login.jpg');\\n    background-size: cover;\\n    width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjtBQUNBO0lBQ0ksV0FBVztBQUNmLGFBQWE7SUFDVDtBQUNKO0lBQ0kscUNBQWdEO0lBQ2hELHNCQUFzQjtJQUN0QixXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyJzdmcubXgtYXV0byB7XHJcbiAgICBtYXJnaW46IGF1dG8gNDIlICFpbXBvcnRhbnQ7XHJcbn1cclxuLmNvbnRhaW5lcntcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5oZWlnaHQ6IDEwMHZoO1xyXG4gICAgfVxyXG5ib2R5e1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4uL2Fzc2V0cy9iZy1sb2dpbi5qcGcpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\", \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n<link rel=\\\"stylesheet\\\" href=\\\"login.component.html\\\">\\n    <title>Homepage</title>\\n    </head>\\n\\n    <body>\\n\\n<div class=\\\"login-container container pt-3\\\"  >\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 col-sm-8 m-auto\\\">\\n<div class=\\\"card border-0 shadow\\\">\\n  <div class=\\\"card-body\\\">\\n    <svg class=\\\"mx-auto \\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"60\\\" height=\\\"60\\\" fill=\\\"currentColor\\\"  viewBox=\\\"0 0 16 16\\\">\\n      <path d=\\\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0\\\"/>\\n      <path fill-rule=\\\"evenodd\\\" d=\\\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1\\\"/>\\n    </svg>  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"form-control my-3 py-2\\\" placeholder=\\\"username\\\" required>\\n  \\n      <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control my-3 py-2\\\" placeholder=\\\"password\\\" required>\\n\\n      <div class=\\\"text-center mt-3\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n\\n\\n      </div>\\n    </form>\\n</div>  \\n\\n<!-- login.component.html -->\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","router","loginForm","group","username","required","password","onSubmit","usernameControl","get","passwordControl","value","console","log","navigate","alert","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵlistener","LoginComponent_Template_form_ngSubmit_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\zeine\\Desktop\\projet angular\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\zeine\\Desktop\\projet angular\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["// login.component.ts\n\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  \n  onSubmit() {\n    const usernameControl = this.loginForm.get('username');\n  const passwordControl = this.loginForm.get('password');\n\n  // Vérifier si les contrôles du formulaire sont définis\n  if (usernameControl && passwordControl) {\n    const username = usernameControl.value;\n    const password = passwordControl.value;\n\n    // Check if the username and password are correct\n    if (username === 'admin' && password === '123456') {\n      // Redirect to the home page (adjust the route as needed)\n      console.log('ok');\n      this.router.navigate(['/homepage']);\n    } else {\n      // Display an error message (you can customize this)\n      alert('Invalid username or password');\n    }\n  }\n}\n}","<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<link rel=\"stylesheet\" href=\"login.component.html\">\n    <title>Homepage</title>\n    </head>\n\n    <body>\n\n<div class=\"login-container container pt-3\"  >\n  <div class=\"row\">\n    <div class=\"col-md-4 col-sm-8 m-auto\">\n<div class=\"card border-0 shadow\">\n  <div class=\"card-body\">\n    <svg class=\"mx-auto \" xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" fill=\"currentColor\"  viewBox=\"0 0 16 16\">\n      <path d=\"M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0\"/>\n      <path fill-rule=\"evenodd\" d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1\"/>\n    </svg>  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"form-control my-3 py-2\" placeholder=\"username\" required>\n  \n      <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control my-3 py-2\" placeholder=\"password\" required>\n\n      <div class=\"text-center mt-3\">\n        <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n\n\n      </div>\n    </form>\n</div>  \n\n<!-- login.component.html -->\n"],"mappings":"AAIA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAOnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAC1D,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,MAAMC,eAAe,GAAG,IAAI,CAACN,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC;IACxD,MAAMC,eAAe,GAAG,IAAI,CAACR,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC;IAEtD;IACA,IAAID,eAAe,IAAIE,eAAe,EAAE;MACtC,MAAMN,QAAQ,GAAGI,eAAe,CAACG,KAAK;MACtC,MAAML,QAAQ,GAAGI,eAAe,CAACC,KAAK;MAEtC;MACA,IAAIP,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,QAAQ,EAAE;QACjD;QACAM,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAM;QACL;QACAC,KAAK,CAAC,8BAA8B,CAAC;;;EAG3C;EAAC,QAAAC,CAAA,G;qBA7BYlB,cAAc,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdzB,cAAc;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bb,EAAA,CAAAe,cAAA,WAAM;QAEFf,EAAA,CAAAgB,SAAA,cAAsB;QAGtBhB,EAAA,CAAAe,cAAA,YAAO;QAAAf,EAAA,CAAAiB,MAAA,eAAQ;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAGvBlB,EAAA,CAAAe,cAAA,WAAM;QAONf,EAAA,CAAAmB,cAAA,EAAyH;QAAzHnB,EAAA,CAAAe,cAAA,cAAyH;QACvHf,EAAA,CAAAgB,SAAA,eAA6C;QAE/ChB,EAAA,CAAAkB,YAAA,EAAM;QAAElB,EAAA,CAAAoB,eAAA,EAAsD;QAAtDpB,EAAA,CAAAe,cAAA,gBAAsD;QAAxBf,EAAA,CAAAqB,UAAA,sBAAAC,kDAAA;UAAA,OAAYR,GAAA,CAAAxB,QAAA,EAAU;QAAA,EAAC;QAC3DU,EAAA,CAAAgB,SAAA,iBAA2H;QAI3HhB,EAAA,CAAAe,cAAA,eAA8B;QACkBf,EAAA,CAAAiB,MAAA,aAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;QANlDlB,EAAA,CAAAuB,SAAA,IAAuB;QAAvBvB,EAAA,CAAAwB,UAAA,cAAAV,GAAA,CAAA7B,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}