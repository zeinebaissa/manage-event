{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiseriviceEventService {\n  constructor(_http) {\n    this._http = _http;\n    //connect frontend to backend\n    this.apiUrl = 'http://localhost:3000/event';\n  }\n  //get all data\n  getAllData() {\n    return this._http.get(`${this.apiUrl}`);\n  }\n  //create data\n  createData(data) {\n    console.log(data, \"data==>\");\n    return this._http.post(`${this.apiUrl}`, data);\n  }\n  //delete data\n  deleteData(id_event) {\n    let ids = id_event;\n    return this._http.delete(`${this.apiUrl}/${ids}`);\n  }\n  //update data\n  updateData(data, id_event) {\n    let ids = id_event;\n    return this._http.put(`${this.apiUrl}/${ids}`, data);\n  }\n  //get single data\n  getSingleData(id_event) {\n    let ids = id_event;\n    return this._http.get(`${this.apiUrl}/${ids}`);\n  }\n  static #_ = this.ɵfac = function ApiseriviceEventService_Factory(t) {\n    return new (t || ApiseriviceEventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiseriviceEventService,\n    factory: ApiseriviceEventService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiseriviceEventService","constructor","_http","apiUrl","getAllData","get","createData","data","console","log","post","deleteData","id_event","ids","delete","updateData","put","getSingleData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\zeine\\Desktop\\DSI21S1\\projet angular\\frontend\\src\\app\\apiserivice-event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiseriviceEventService {\n\n  constructor(private _http:HttpClient) { }\n  //connect frontend to backend\n  apiUrl='http://localhost:3000/event';\n\n  //get all data\n  getAllData():Observable<any>{\n    return this._http.get(`${this.apiUrl}`);\n  }\n\n  //create data\n  createData(data:any):Observable<any>{\n    console.log(data,\"data==>\");\n    return this._http.post(`${this.apiUrl}`,data);\n\n  }\n\n  //delete data\n  deleteData(id_event:any):Observable<any>{\n    let ids=id_event;\n    return this._http.delete(`${this.apiUrl}/${ids}`);\n  }\n\n  //update data\n  updateData(data:any,id_event:any):Observable<any>{\n    let ids=id_event;\n    return this._http.put(`${this.apiUrl}/${ids}`,data);\n  }\n\n  //get single data\n  getSingleData(id_event:any):Observable<any>{\n    let ids=id_event;\n    return this._http.get(`${this.apiUrl}/${ids}`);\n  }\n}\n\n"],"mappings":";;AAOA,OAAM,MAAOA,uBAAuB;EAElCC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IACzB;IACA,KAAAC,MAAM,GAAC,6BAA6B;EAFI;EAIxC;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACzC;EAEA;EACAG,UAAUA,CAACC,IAAQ;IACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAC,SAAS,CAAC;IAC3B,OAAO,IAAI,CAACL,KAAK,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,EAAE,EAACI,IAAI,CAAC;EAE/C;EAEA;EACAI,UAAUA,CAACC,QAAY;IACrB,IAAIC,GAAG,GAACD,QAAQ;IAChB,OAAO,IAAI,CAACV,KAAK,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIU,GAAG,EAAE,CAAC;EACnD;EAEA;EACAE,UAAUA,CAACR,IAAQ,EAACK,QAAY;IAC9B,IAAIC,GAAG,GAACD,QAAQ;IAChB,OAAO,IAAI,CAACV,KAAK,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,MAAM,IAAIU,GAAG,EAAE,EAACN,IAAI,CAAC;EACrD;EAEA;EACAU,aAAaA,CAACL,QAAY;IACxB,IAAIC,GAAG,GAACD,QAAQ;IAChB,OAAO,IAAI,CAACV,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,IAAIU,GAAG,EAAE,CAAC;EAChD;EAAC,QAAAK,CAAA,G;qBAlCUlB,uBAAuB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAvBvB,uBAAuB;IAAAwB,OAAA,EAAvBxB,uBAAuB,CAAAyB,IAAA;IAAAC,UAAA,EAFtB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}