{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    const usernameControl = this.loginForm.get('username');\n    const passwordControl = this.loginForm.get('password');\n    // Vérifier si les contrôles du formulaire sont définis\n    if (usernameControl && passwordControl) {\n      const username = usernameControl.value;\n      const password = passwordControl.value;\n      // Check if the username and password are correct\n      if (username === 'admin' && password === 'password') {\n        // Redirect to the home page (adjust the route as needed)\n        this.router.navigate(['./homepage/homepage.component.html']);\n      } else {\n        // Display an error message (you can customize this)\n        alert('Invalid username or password');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 12,\n    vars: 0,\n    consts: [[1, \"login-container\"], [\"action\", \"your_processing_script.php\", \"method\", \"post\", 1, \"login-form\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Login\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AppComponent","constructor","formBuilder","router","loginForm","group","username","required","password","onSubmit","usernameControl","get","passwordControl","value","navigate","alert","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\zeine\\Desktop\\DSI21S1\\ANGULAR\\projet angular\\frontend\\src\\app\\app.component.ts","C:\\Users\\zeine\\Desktop\\DSI21S1\\ANGULAR\\projet angular\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    const usernameControl = this.loginForm.get('username');\n  const passwordControl = this.loginForm.get('password');\n\n  // Vérifier si les contrôles du formulaire sont définis\n  if (usernameControl && passwordControl) {\n    const username = usernameControl.value;\n    const password = passwordControl.value;\n\n    // Check if the username and password are correct\n    if (username === 'admin' && password === 'password') {\n      // Redirect to the home page (adjust the route as needed)\n      this.router.navigate(['./homepage/homepage.component.html']);\n    } else {\n      // Display an error message (you can customize this)\n      alert('Invalid username or password');\n    }\n  }\n}\n}","<div class=\"login-container\">\n  <h2>Login</h2>\n  <form class=\"login-form\" action=\"your_processing_script.php\" method=\"post\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\" required>\n\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" required>\n\n      <button type=\"submit\">Login</button>\n  </form>\n</div>\n<script>\n  function validateLogin() {\n      var usernameInput = document.getElementById('username') ;\n      var passwordInput = document.getElementById('password') ;\n\n      var username = usernameInput.value;\n      var password = passwordInput.value;\n\n      // Check if the username and password are correct\n      if (username === 'admin' && password === 'password') {\n          // Redirect to the home page (adjust the URL as needed)\n          window.location.href = './homepage/homepage.component.html';\n          return false; // Prevent form submission\n      } else {\n          // Display an error message (you can customize this)\n          alert('Invalid username or password');\n          return false; // Prevent form submission\n      }\n  }\n</script>\n"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;AAMnE,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAC1D,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,MAAMC,eAAe,GAAG,IAAI,CAACN,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC;IACxD,MAAMC,eAAe,GAAG,IAAI,CAACR,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC;IAEtD;IACA,IAAID,eAAe,IAAIE,eAAe,EAAE;MACtC,MAAMN,QAAQ,GAAGI,eAAe,CAACG,KAAK;MACtC,MAAML,QAAQ,GAAGI,eAAe,CAACC,KAAK;MAEtC;MACA,IAAIP,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,UAAU,EAAE;QACnD;QACA,IAAI,CAACL,MAAM,CAACW,QAAQ,CAAC,CAAC,oCAAoC,CAAC,CAAC;OAC7D,MAAM;QACL;QACAC,KAAK,CAAC,8BAA8B,CAAC;;;EAG3C;EAAC,QAAAC,CAAA,G;qBA5BYhB,YAAY,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZvB,YAAY;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBb,EAAA,CAAAe,cAAA,aAA6B;QACvBf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACdjB,EAAA,CAAAe,cAAA,cAA2E;QACjDf,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAA0D;QAE1DlB,EAAA,CAAAe,cAAA,eAAsB;QAAAf,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAA8D;QAE9DlB,EAAA,CAAAe,cAAA,iBAAsB;QAAAf,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}